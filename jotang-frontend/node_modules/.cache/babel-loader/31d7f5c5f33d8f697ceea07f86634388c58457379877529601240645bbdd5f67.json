{"ast":null,"code":"// src/router/index.js\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue'; // 假设 Home.vue 已重命名\nimport LoginView from '../views/LoginView.vue';\nimport SignupView from '../views/SignupView.vue';\nimport ProductList from '../views/ProductList.vue';\nimport ProductOrder from '../views/ProductOrder.vue';\nconst routes = [{\n  path: '/',\n  name: 'HomeView',\n  component: HomeView\n}, {\n  path: '/login',\n  name: 'LoginView',\n  component: LoginView\n}, {\n  path: '/signup',\n  name: 'SignupView',\n  component: SignupView\n}, {\n  path: '/products',\n  name: 'Products',\n  component: ProductList\n}, {\n  path: '/create-order',\n  name: 'CreateOrder',\n  component: ProductOrder\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// (可选) 路由守卫：检查是否需要登录\nrouter.beforeEach((to, from, next) => {\n  const publicPages = ['/login', '/signup'];\n  const authRequired = !publicPages.includes(to.path);\n  const loggedIn = localStorage.getItem('jwt-token');\n  if (authRequired && !loggedIn) {\n    return next('/login');\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","LoginView","SignupView","ProductList","ProductOrder","routes","path","name","component","router","history","beforeEach","to","from","next","publicPages","authRequired","includes","loggedIn","localStorage","getItem"],"sources":["G:/vue-project/jotang-frontend/src/router/index.js"],"sourcesContent":["// src/router/index.js\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue'; // 假设 Home.vue 已重命名\nimport LoginView from '../views/LoginView.vue';\nimport SignupView from '../views/SignupView.vue';\nimport ProductList from '../views/ProductList.vue';\nimport ProductOrder from '../views/ProductOrder.vue';\n\nconst routes = [\n  { path: '/', name: 'HomeView', component: HomeView },\n  { path: '/login', name: 'LoginView', component: LoginView },\n  { path: '/signup', name: 'SignupView', component: SignupView },\n  { path: '/products', name: 'Products', component: ProductList },\n  { path: '/create-order', name: 'CreateOrder', component: ProductOrder }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// (可选) 路由守卫：检查是否需要登录\nrouter.beforeEach((to, from, next) => {\n  const publicPages = ['/login', '/signup'];\n  const authRequired = !publicPages.includes(to.path);\n  const loggedIn = localStorage.getItem('jwt-token');\n\n  if (authRequired && !loggedIn) {\n    return next('/login');\n  }\n\n  next();\n});\n\nexport default router;"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAER;AAAS,CAAC,EACpD;EAAEM,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEP;AAAU,CAAC,EAC3D;EAAEK,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEN;AAAW,CAAC,EAC9D;EAAEI,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEL;AAAY,CAAC,EAC/D;EAAEG,IAAI,EAAE,eAAe;EAAEC,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEJ;AAAa,CAAC,CACxE;AAED,MAAMK,MAAM,GAAGX,YAAY,CAAC;EAC1BY,OAAO,EAAEX,gBAAgB,CAAC,CAAC;EAC3BM;AACF,CAAC,CAAC;;AAEF;AACAI,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,WAAW,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC;EACzC,MAAMC,YAAY,GAAG,CAACD,WAAW,CAACE,QAAQ,CAACL,EAAE,CAACN,IAAI,CAAC;EACnD,MAAMY,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAElD,IAAIJ,YAAY,IAAI,CAACE,QAAQ,EAAE;IAC7B,OAAOJ,IAAI,CAAC,QAAQ,CAAC;EACvB;EAEAA,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}