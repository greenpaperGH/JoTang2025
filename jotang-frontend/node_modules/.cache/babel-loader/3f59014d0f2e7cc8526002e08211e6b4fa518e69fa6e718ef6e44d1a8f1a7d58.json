{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport apiClient from '../services/api';\nexport default {\n  __name: 'SignupView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const user = reactive({\n      username: '',\n      password: '',\n      phone: '',\n      role: 'user' //\n    });\n    const successMsg = ref('');\n    const errorMsg = ref('');\n    const handleSignup = async () => {\n      try {\n        //\n        // SignupController.java 使用了 @RequestBody，所以我们直接发送 JSON 对象\n        const response = await apiClient.post('/signup', user);\n        if (response.data.code === 1) {\n          //\n          successMsg.value = '注册成功！正在跳转到登录页...';\n          errorMsg.value = '';\n          setTimeout(() => {\n            router.push('/login');\n          }, 2000);\n        } else {\n          errorMsg.value = response.data.msg || '注册失败。';\n          successMsg.value = '';\n        }\n      } catch (error) {\n        console.error('注册异常:', error);\n        errorMsg.value = error.response?.data?.msg || '注册失败，请检查用户名是否已存在。';\n        successMsg.value = '';\n      }\n    };\n    const __returned__ = {\n      router,\n      user,\n      successMsg,\n      errorMsg,\n      handleSignup,\n      reactive,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get apiClient() {\n        return apiClient;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","useRouter","apiClient","router","user","username","password","phone","role","successMsg","errorMsg","handleSignup","response","post","data","code","value","setTimeout","push","msg","error","console"],"sources":["G:/vue-project/jotang-frontend/src/views/SignupView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>注册</h2>\r\n    <form @submit.prevent=\"handleSignup\">\r\n      <div>\r\n        <label>用户名: </label>\r\n        <input v-model=\"user.username\" type=\"text\" required />\r\n      </div>\r\n      <div>\r\n        <label>密码: </label>\r\n        <input v-model=\"user.password\" type=\"password\" required />\r\n      </div>\r\n      <div>\r\n        <label>电话: </label>\r\n        <input v-model=\"user.phone\" type=\"tel\" />\r\n      </div>\r\n      <div>\r\n        <label>角色: </label>\r\n        <input v-model=\"user.role\" type=\"text\" placeholder=\"e.g., user\" />\r\n      </div>\r\n      <button type=\"submit\">注册</button>\r\n      <p v-if=\"successMsg\" style=\"color: green\">{{ successMsg }}</p>\r\n      <p v-if=\"errorMsg\" style=\"color: red\">{{ errorMsg }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport apiClient from '../services/api';\r\n\r\nconst router = useRouter();\r\nconst user = reactive({\r\n  username: '',\r\n  password: '',\r\n  phone: '',\r\n  role: 'user' //\r\n});\r\nconst successMsg = ref('');\r\nconst errorMsg = ref('');\r\n\r\nconst handleSignup = async () => {\r\n  try {\r\n    //\r\n    // SignupController.java 使用了 @RequestBody，所以我们直接发送 JSON 对象\r\n    const response = await apiClient.post('/signup', user);\r\n\r\n    if (response.data.code === 1) { //\r\n      successMsg.value = '注册成功！正在跳转到登录页...';\r\n      errorMsg.value = '';\r\n      setTimeout(() => {\r\n        router.push('/login');\r\n      }, 2000);\r\n    } else {\r\n      errorMsg.value = response.data.msg || '注册失败。';\r\n      successMsg.value = '';\r\n    }\r\n  } catch (error) {\r\n    console.error('注册异常:', error);\r\n    errorMsg.value = error.response?.data?.msg || '注册失败，请检查用户名是否已存在。';\r\n    successMsg.value = '';\r\n  }\r\n};\r\n</script>"],"mappings":";AA4BA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,SAAS,MAAM,iBAAiB;;;;;;;IAEvC,MAAMC,MAAM,GAAGF,SAAS,CAAC,CAAC;IAC1B,MAAMG,IAAI,GAAGL,QAAQ,CAAC;MACpBM,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,MAAM,CAAC;IACf,CAAC,CAAC;IACF,MAAMC,UAAU,GAAGT,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMU,QAAQ,GAAGV,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMV,SAAS,CAACW,IAAI,CAAC,SAAS,EAAET,IAAI,CAAC;QAEtD,IAAIQ,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,EAAE;UAAE;UAC9BN,UAAU,CAACO,KAAK,GAAG,kBAAkB;UACrCN,QAAQ,CAACM,KAAK,GAAG,EAAE;UACnBC,UAAU,CAAC,MAAM;YACfd,MAAM,CAACe,IAAI,CAAC,QAAQ,CAAC;UACvB,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,MAAM;UACLR,QAAQ,CAACM,KAAK,GAAGJ,QAAQ,CAACE,IAAI,CAACK,GAAG,IAAI,OAAO;UAC7CV,UAAU,CAACO,KAAK,GAAG,EAAE;QACvB;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BV,QAAQ,CAACM,KAAK,GAAGI,KAAK,CAACR,QAAQ,EAAEE,IAAI,EAAEK,GAAG,IAAI,mBAAmB;QACjEV,UAAU,CAACO,KAAK,GAAG,EAAE;MACvB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}