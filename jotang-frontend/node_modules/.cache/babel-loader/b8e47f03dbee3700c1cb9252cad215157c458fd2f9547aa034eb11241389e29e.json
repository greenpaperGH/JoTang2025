{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"color\": \"green\"\n  }\n};\nconst _hoisted_2 = {\n  key: 1,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"创建订单\", -1 /* CACHED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.createOrder, [\"prevent\"])\n  }, [_createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", null, \"商品ID: \", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.order.productId = $event),\n    type: \"number\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.order.productId, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", null, \"购买者ID: \", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.order.buyerId = $event),\n    type: \"number\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.order.buyerId, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", null, \"状态: \", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.order.status = $event),\n    type: \"text\",\n    placeholder: \"e.g., pending\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.order.status]])]), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"提交订单\", -1 /* CACHED */)), $setup.successMsg ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($setup.successMsg), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.errorMsg ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($setup.errorMsg), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["style","_createElementBlock","_createElementVNode","onSubmit","_withModifiers","$setup","createOrder","order","productId","$event","type","required","number","buyerId","status","placeholder","successMsg","_hoisted_1","_toDisplayString","errorMsg","_hoisted_2"],"sources":["G:\\vue-project\\jotang-frontend\\src\\views\\ProductOrder.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>创建订单</h2>\r\n    <form @submit.prevent=\"createOrder\">\r\n      <div>\r\n        <label>商品ID: </label>\r\n        <input v-model.number=\"order.productId\" type=\"number\" required />\r\n      </div>\r\n      <div>\r\n        <label>购买者ID: </label>\r\n        <input v-model.number=\"order.buyerId\" type=\"number\" required />\r\n      </div>\r\n      <div>\r\n        <label>状态: </label>\r\n        <input v-model=\"order.status\" type=\"text\" placeholder=\"e.g., pending\" required/>\r\n      </div>\r\n      <button type=\"submit\">提交订单</button>\r\n      <p v-if=\"successMsg\" style=\"color: green\">{{ successMsg }}</p>\r\n      <p v-if=\"errorMsg\" style=\"color: red\">{{ errorMsg }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue';\r\nimport apiClient from '../services/api';\r\n\r\n//\r\nconst order = reactive({\r\n  productId: null,\r\n  buyerId: null, // 实际应用中 buyerId 应从当前登录用户获取\r\n  status: 'pending'\r\n});\r\n\r\nconst successMsg = ref('');\r\nconst errorMsg = ref('');\r\n\r\n// POST /product-orders\r\nconst createOrder = async () => {\r\n  try {\r\n    successMsg.value = '';\r\n    errorMsg.value = '';\r\n    \r\n    // ProductOrderController.java 使用了 @RequestBody\r\n    const response = await apiClient.post('/product-orders', order);\r\n\r\n    if (response.data.code === 1) { //\r\n      successMsg.value = '订单创建成功！';\r\n      // 重置表单\r\n      Object.assign(order, { productId: null, buyerId: null, status: 'pending' });\r\n    } else {\r\n      errorMsg.value = response.data.msg || '订单创建失败。';\r\n    }\r\n  } catch (error) {\r\n    console.error('创建订单异常:', error);\r\n    errorMsg.value = error.response?.data?.msg || '服务器错误。';\r\n  }\r\n};\r\n</script>"],"mappings":";;;EAiB2BA,KAAoB,EAApB;IAAA;EAAA;;;;EACFA,KAAkB,EAAlB;IAAA;EAAA;;;uBAjBvBC,mBAAA,CAmBM,c,0BAlBJC,mBAAA,CAAa,YAAT,MAAI,qBACRA,mBAAA,CAgBO;IAhBAC,QAAM,EAAAC,cAAA,CAAUC,MAAA,CAAAC,WAAW;MAChCJ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAqB,eAAd,QAAM,qB,gBACbA,mBAAA,CAAiE;+DAA1CG,MAAA,CAAAE,KAAK,CAACC,SAAS,GAAAC,MAAA;IAAEC,IAAI,EAAC,QAAQ;IAACC,QAAQ,EAAR;iDAA/BN,MAAA,CAAAE,KAAK,CAACC,SAAS,E;IAAvBI,MAAM,EAAd;EAAgC,E,MAEzCV,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAsB,eAAf,SAAO,qB,gBACdA,mBAAA,CAA+D;+DAAxCG,MAAA,CAAAE,KAAK,CAACM,OAAO,GAAAJ,MAAA;IAAEC,IAAI,EAAC,QAAQ;IAACC,QAAQ,EAAR;iDAA7BN,MAAA,CAAAE,KAAK,CAACM,OAAO,E;IAArBD,MAAM,EAAd;EAA8B,E,MAEvCV,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAmB,eAAZ,MAAI,qB,gBACXA,mBAAA,CAAgF;+DAAhEG,MAAA,CAAAE,KAAK,CAACO,MAAM,GAAAL,MAAA;IAAEC,IAAI,EAAC,MAAM;IAACK,WAAW,EAAC,eAAe;IAACJ,QAAQ,EAAR;iDAAtDN,MAAA,CAAAE,KAAK,CAACO,MAAM,E,+BAE9BZ,mBAAA,CAAmC;IAA3BQ,IAAI,EAAC;EAAQ,GAAC,MAAI,qBACjBL,MAAA,CAAAW,UAAU,I,cAAnBf,mBAAA,CAA8D,KAA9DgB,UAA8D,EAAAC,gBAAA,CAAjBb,MAAA,CAAAW,UAAU,oB,mCAC9CX,MAAA,CAAAc,QAAQ,I,cAAjBlB,mBAAA,CAAwD,KAAxDmB,UAAwD,EAAAF,gBAAA,CAAfb,MAAA,CAAAc,QAAQ,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}