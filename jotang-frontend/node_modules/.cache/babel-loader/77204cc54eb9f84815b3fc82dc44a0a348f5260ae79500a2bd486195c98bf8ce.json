{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_2 = {\n  key: 1,\n  style: {\n    \"color\": \"green\"\n  }\n};\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport apiClient from '@/services/apiClient';\nexport default {\n  __name: 'SignupView',\n  setup(__props) {\n    const router = useRouter();\n    // 使用 reactive 来处理表单对象\n    const user = reactive({\n      username: '',\n      password: '',\n      role: 'buyer',\n      // 默认角色\n      phone: ''\n    });\n    const error = ref(null);\n    const success = ref(null);\n    const handleSubmit = async () => {\n      error.value = null;\n      success.value = null;\n      try {\n        // 对应 SignupController 的 @RequestBody，apiClient 会发送 JSON\n        const result = await apiClient('/signup', 'POST', user);\n        if (result.code === 1) {\n          success.value = '注册成功！即将跳转到登录页...';\n          setTimeout(() => {\n            router.push({\n              name: 'Login'\n            });\n          }, 2000);\n        } else {\n          error.value = result.msg || '注册失败。';\n        }\n      } catch (err) {\n        error.value = err.message || '发生错误。';\n      }\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"注册新用户\", -1)), _createElementVNode(\"form\", {\n        onSubmit: _withModifiers(handleSubmit, [\"prevent\"])\n      }, [_createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n        for: \"username\"\n      }, \"用户名:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => user.username = $event),\n        id: \"username\",\n        required: \"\"\n      }, null, 512), [[_vModelText, user.username]])]), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n        for: \"password\"\n      }, \"密码:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"password\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => user.password = $event),\n        id: \"password\",\n        required: \"\"\n      }, null, 512), [[_vModelText, user.password]])]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n        for: \"role\"\n      }, \"角色 (例如: buyer, publisher):\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => user.role = $event),\n        id: \"role\",\n        required: \"\"\n      }, null, 512), [[_vModelText, user.role]])]), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n        for: \"phone\"\n      }, \"电话:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"tel\",\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => user.phone = $event),\n        id: \"phone\"\n      }, null, 512), [[_vModelText, user.phone]])]), _cache[8] || (_cache[8] = _createElementVNode(\"button\", {\n        type: \"submit\"\n      }, \"注册\", -1)), error.value ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString(error.value), 1)) : _createCommentVNode(\"\", true), success.value ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString(success.value), 1)) : _createCommentVNode(\"\", true)], 32)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","apiClient","router","user","username","password","role","phone","error","success","handleSubmit","value","result","code","setTimeout","push","name","msg","err","message","_createElementBlock","_createElementVNode","onSubmit","_withModifiers","for","type","$event","id","required","_hoisted_1","_toDisplayString","_hoisted_2"],"sources":["G:/vue-project/jotang-frontend/src/views/SignupView.vue","G:\\vue-project\\jotang-frontend\\src\\views\\SignupView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>注册新用户</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div>\r\n        <label for=\"username\">用户名:</label>\r\n        <input type=\"text\" v-model=\"user.username\" id=\"username\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">密码:</label>\r\n        <input type=\"password\" v-model=\"user.password\" id=\"password\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"role\">角色 (例如: buyer, publisher):</label>\r\n        <input type=\"text\" v-model=\"user.role\" id=\"role\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"phone\">电话:</label>\r\n        <input type=\"tel\" v-model=\"user.phone\" id=\"phone\">\r\n      </div>\r\n      <button type=\"submit\">注册</button>\r\n      <p v-if=\"error\" style=\"color: red;\">{{ error }}</p>\r\n      <p v-if=\"success\" style=\"color: green;\">{{ success }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport apiClient from '@/services/apiClient';\r\n\r\nconst router = useRouter();\r\n// 使用 reactive 来处理表单对象\r\nconst user = reactive({\r\n  username: '',\r\n  password: '',\r\n  role: 'buyer', // 默认角色\r\n  phone: ''\r\n});\r\nconst error = ref(null);\r\nconst success = ref(null);\r\n\r\nconst handleSubmit = async () => {\r\n  error.value = null;\r\n  success.value = null;\r\n  try {\r\n    // 对应 SignupController 的 @RequestBody，apiClient 会发送 JSON\r\n    const result = await apiClient('/signup', 'POST', user);\r\n\r\n    if (result.code === 1) {\r\n      success.value = '注册成功！即将跳转到登录页...';\r\n      setTimeout(() => {\r\n        router.push({ name: 'Login' });\r\n      }, 2000);\r\n    } else {\r\n      error.value = result.msg || '注册失败。';\r\n    }\r\n  } catch (err) {\r\n    error.value = err.message || '发生错误。';\r\n  }\r\n};\r\n</script>","<template>\r\n  <div>\r\n    <h2>注册新用户</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div>\r\n        <label for=\"username\">用户名:</label>\r\n        <input type=\"text\" v-model=\"user.username\" id=\"username\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">密码:</label>\r\n        <input type=\"password\" v-model=\"user.password\" id=\"password\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"role\">角色 (例如: buyer, publisher):</label>\r\n        <input type=\"text\" v-model=\"user.role\" id=\"role\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"phone\">电话:</label>\r\n        <input type=\"tel\" v-model=\"user.phone\" id=\"phone\">\r\n      </div>\r\n      <button type=\"submit\">注册</button>\r\n      <p v-if=\"error\" style=\"color: red;\">{{ error }}</p>\r\n      <p v-if=\"success\" style=\"color: green;\">{{ success }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport apiClient from '@/services/apiClient';\r\n\r\nconst router = useRouter();\r\n// 使用 reactive 来处理表单对象\r\nconst user = reactive({\r\n  username: '',\r\n  password: '',\r\n  role: 'buyer', // 默认角色\r\n  phone: ''\r\n});\r\nconst error = ref(null);\r\nconst success = ref(null);\r\n\r\nconst handleSubmit = async () => {\r\n  error.value = null;\r\n  success.value = null;\r\n  try {\r\n    // 对应 SignupController 的 @RequestBody，apiClient 会发送 JSON\r\n    const result = await apiClient('/signup', 'POST', user);\r\n\r\n    if (result.code === 1) {\r\n      success.value = '注册成功！即将跳转到登录页...';\r\n      setTimeout(() => {\r\n        router.push({ name: 'Login' });\r\n      }, 2000);\r\n    } else {\r\n      error.value = result.msg || '注册失败。';\r\n    }\r\n  } catch (err) {\r\n    error.value = err.message || '发生错误。';\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}