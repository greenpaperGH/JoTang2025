{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useAuth } from '@/utils/auth';\nimport apiClient from '@/services/apiClient';\nexport default {\n  __name: 'LoginView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const username = ref('');\n    const password = ref('');\n    const error = ref(null);\n    const router = useRouter();\n    const {\n      saveToken\n    } = useAuth();\n    const handleSubmit = async () => {\n      error.value = null;\n      try {\n        // 对应 LoginController 的 x-www-form-urlencoded\n        const formData = {\n          username: username.value,\n          password: password.value\n        };\n        const result = await apiClient('/login', 'POST', formData);\n        if (result.code === 1 && result.data) {\n          saveToken(result.data); // result.data 是 JWT\n          router.push({\n            name: 'ProductList'\n          }); // 登录成功，跳转到商品页\n        } else {\n          error.value = result.msg || '登录失败。';\n        }\n      } catch (err) {\n        error.value = err.message || '发生错误。';\n      }\n    };\n    const __returned__ = {\n      username,\n      password,\n      error,\n      router,\n      saveToken,\n      handleSubmit,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get useAuth() {\n        return useAuth;\n      },\n      get apiClient() {\n        return apiClient;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","useAuth","apiClient","username","password","error","router","saveToken","handleSubmit","value","formData","result","code","data","push","name","msg","err","message"],"sources":["G:/vue-project/jotang-frontend/src/views/LoginView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>登录</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div>\r\n        <label for=\"username\">用户名:</label>\r\n        <input type=\"text\" v-model=\"username\" id=\"username\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">密码:</label>\r\n        <input type=\"password\" v-model=\"password\" id=\"password\" required>\r\n      </div>\r\n      <button type=\"submit\">登录</button>\r\n      <p v-if=\"error\" style=\"color: red;\">{{ error }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { useAuth } from '@/utils/auth';\r\nimport apiClient from '@/services/apiClient';\r\n\r\nconst username = ref('');\r\nconst password = ref('');\r\nconst error = ref(null);\r\n\r\nconst router = useRouter();\r\nconst { saveToken } = useAuth();\r\n\r\nconst handleSubmit = async () => {\r\n  error.value = null;\r\n  try {\r\n    // 对应 LoginController 的 x-www-form-urlencoded\r\n    const formData = {\r\n      username: username.value,\r\n      password: password.value\r\n    };\r\n    \r\n    const result = await apiClient('/login', 'POST', formData);\r\n\r\n    if (result.code === 1 && result.data) {\r\n      saveToken(result.data); // result.data 是 JWT\r\n      router.push({ name: 'ProductList' }); // 登录成功，跳转到商品页\r\n    } else {\r\n      error.value = result.msg || '登录失败。';\r\n    }\r\n  } catch (err) {\r\n    error.value = err.message || '发生错误。';\r\n  }\r\n};\r\n</script>"],"mappings":";AAmBA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,OAAO,QAAQ,cAAc;AACtC,OAAOC,SAAS,MAAM,sBAAsB;;;;;;;IAE5C,MAAMC,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,KAAK,GAAGN,GAAG,CAAC,IAAI,CAAC;IAEvB,MAAMO,MAAM,GAAGN,SAAS,CAAC,CAAC;IAC1B,MAAM;MAAEO;IAAU,CAAC,GAAGN,OAAO,CAAC,CAAC;IAE/B,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BH,KAAK,CAACI,KAAK,GAAG,IAAI;MAClB,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG;UACfP,QAAQ,EAAEA,QAAQ,CAACM,KAAK;UACxBL,QAAQ,EAAEA,QAAQ,CAACK;QACrB,CAAC;QAED,MAAME,MAAM,GAAG,MAAMT,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAEQ,QAAQ,CAAC;QAE1D,IAAIC,MAAM,CAACC,IAAI,KAAK,CAAC,IAAID,MAAM,CAACE,IAAI,EAAE;UACpCN,SAAS,CAACI,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC;UACxBP,MAAM,CAACQ,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAc,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC,MAAM;UACLV,KAAK,CAACI,KAAK,GAAGE,MAAM,CAACK,GAAG,IAAI,OAAO;QACrC;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZZ,KAAK,CAACI,KAAK,GAAGQ,GAAG,CAACC,OAAO,IAAI,OAAO;MACtC;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}