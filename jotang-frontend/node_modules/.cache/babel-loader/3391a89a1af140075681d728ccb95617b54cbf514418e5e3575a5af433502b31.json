{"ast":null,"code":"// src/router/index.js\n\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue'; // 建议将 Home.vue 也重命名为 HomeView.vue\nimport LoginView from '../views/LoginView.vue'; // 确保文件名已更改\nimport SignupView from '../views/SignupView.vue'; // 确保文件名已更改\nimport ProductList from '../views/ProductList.vue';\nimport ProductOrder from '../views/ProductOrder.vue';\n\n// 1. 定义路由数组\nconst routes = [{\n  path: '/',\n  name: 'HomeView',\n  // 使用多词名称\n  component: HomeView\n}, {\n  path: '/login',\n  name: 'LoginView',\n  // 使用多词名称\n  component: LoginView\n}, {\n  path: '/signup',\n  name: 'SignupView',\n  // 使用多词名称\n  component: SignupView\n}, {\n  path: '/products',\n  name: 'Products',\n  component: ProductList\n}, {\n  path: '/create-order',\n  name: 'CreateOrder',\n  component: ProductOrder\n}];\n\n// 2. 创建 router 实例\n//    (这一步解决了 'createRouter' 'createWebHistory' 'routes' 未使用的问题)\nconst router = createRouter({\n  history: createWebHistory(),\n  routes // 将 `routes` 数组传递给路由器\n});\n\n// 3. (可选) 添加路由守卫\nrouter.beforeEach((to, from, next) => {\n  const publicPages = ['/login', '/signup'];\n  const authRequired = !publicPages.includes(to.path);\n  const loggedIn = localStorage.getItem('jwt-token');\n  if (authRequired && !loggedIn) {\n    return next('/login');\n  }\n  next();\n});\n\n// 4. 导出 router 实例\n//    (这一步解决了 'router' is not defined 的问题)\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","LoginView","SignupView","ProductList","ProductOrder","routes","path","name","component","router","history","beforeEach","to","from","next","publicPages","authRequired","includes","loggedIn","localStorage","getItem"],"sources":["G:/vue-project/jotang-frontend/src/router/index.js"],"sourcesContent":["// src/router/index.js\n\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue'; // 建议将 Home.vue 也重命名为 HomeView.vue\nimport LoginView from '../views/LoginView.vue'; // 确保文件名已更改\nimport SignupView from '../views/SignupView.vue'; // 确保文件名已更改\nimport ProductList from '../views/ProductList.vue';\nimport ProductOrder from '../views/ProductOrder.vue';\n\n// 1. 定义路由数组\nconst routes = [\n  { \n    path: '/', \n    name: 'HomeView', // 使用多词名称\n    component: HomeView \n  },\n  { \n    path: '/login', \n    name: 'LoginView', // 使用多词名称\n    component: LoginView \n  },\n  { \n    path: '/signup', \n    name: 'SignupView', // 使用多词名称\n    component: SignupView \n  },\n  { \n    path: '/products', \n    name: 'Products', \n    component: ProductList \n  },\n  { \n    path: '/create-order', \n    name: 'CreateOrder', \n    component: ProductOrder \n  }\n];\n\n// 2. 创建 router 实例\n//    (这一步解决了 'createRouter' 'createWebHistory' 'routes' 未使用的问题)\nconst router = createRouter({\n  history: createWebHistory(),\n  routes // 将 `routes` 数组传递给路由器\n});\n\n// 3. (可选) 添加路由守卫\nrouter.beforeEach((to, from, next) => {\n  const publicPages = ['/login', '/signup'];\n  const authRequired = !publicPages.includes(to.path);\n  const loggedIn = localStorage.getItem('jwt-token');\n\n  if (authRequired && !loggedIn) {\n    return next('/login');\n  }\n\n  next();\n});\n\n// 4. 导出 router 实例\n//    (这一步解决了 'router' is not defined 的问题)\nexport default router;"],"mappings":"AAAA;;AAEA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAC9C,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;AAChD,OAAOC,UAAU,MAAM,yBAAyB,CAAC,CAAC;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;;AAEpD;AACA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,UAAU;EAAE;EAClBC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,WAAW;EAAE;EACnBC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,YAAY;EAAE;EACpBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL;AACb,CAAC,EACD;EACEG,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEJ;AACb,CAAC,CACF;;AAED;AACA;AACA,MAAMK,MAAM,GAAGX,YAAY,CAAC;EAC1BY,OAAO,EAAEX,gBAAgB,CAAC,CAAC;EAC3BM,MAAM,CAAC;AACT,CAAC,CAAC;;AAEF;AACAI,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,WAAW,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC;EACzC,MAAMC,YAAY,GAAG,CAACD,WAAW,CAACE,QAAQ,CAACL,EAAE,CAACN,IAAI,CAAC;EACnD,MAAMY,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAElD,IAAIJ,YAAY,IAAI,CAACE,QAAQ,EAAE;IAC7B,OAAOJ,IAAI,CAAC,QAAQ,CAAC;EACvB;EAEAA,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACA;AACA,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}