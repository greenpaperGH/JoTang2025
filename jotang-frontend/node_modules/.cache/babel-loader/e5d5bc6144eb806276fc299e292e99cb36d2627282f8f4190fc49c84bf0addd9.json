{"ast":null,"code":"// src/router/index.js\nimport { createRouter, createWebHistory } from 'vue-router';\nimport { useAuth } from '@/store/auth.js';\n\n// 导入视图\nimport HomeView from '@/views/HomeView.vue';\nimport AuthView from '@/views/AuthView.vue';\nimport ProductView from '@/views/ProductView.vue';\nimport OrderView from '@/views/OrderView.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomeView\n}, {\n  path: '/auth',\n  name: 'Auth',\n  component: AuthView\n}, {\n  path: '/products',\n  name: 'Products',\n  component: ProductView,\n  meta: {\n    requiresAuth: true\n  } // 标记此路由需要登录\n}, {\n  path: '/orders',\n  name: 'Orders',\n  component: OrderView,\n  meta: {\n    requiresAuth: true\n  } // 标记此路由需要登录\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 路由守卫：在每次路由跳转前检查\nrouter.beforeEach((to, from, next) => {\n  const {\n    isAuthenticated\n  } = useAuth();\n\n  // 如果路由需要认证 且 用户未登录\n  if (to.meta.requiresAuth && !isAuthenticated.value) {\n    // 重定向到登录页\n    next({\n      name: 'Auth'\n    });\n  } else {\n    // 否则，正常放行\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","useAuth","HomeView","AuthView","ProductView","OrderView","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","isAuthenticated","value"],"sources":["G:/vue-project/jotang-frontend/src/router/index.js"],"sourcesContent":["// src/router/index.js\nimport { createRouter, createWebHistory } from 'vue-router'\nimport { useAuth } from '@/store/auth.js'\n\n// 导入视图\nimport HomeView from '@/views/HomeView.vue'\nimport AuthView from '@/views/AuthView.vue'\nimport ProductView from '@/views/ProductView.vue'\nimport OrderView from '@/views/OrderView.vue'\n\nconst routes = [\n    { path: '/', name: 'Home', component: HomeView },\n    { path: '/auth', name: 'Auth', component: AuthView },\n    { \n        path: '/products', \n        name: 'Products', \n        component: ProductView,\n        meta: { requiresAuth: true } // 标记此路由需要登录\n    },\n    { \n        path: '/orders', \n        name: 'Orders', \n        component: OrderView,\n        meta: { requiresAuth: true } // 标记此路由需要登录\n    }\n]\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes,\n})\n\n// 路由守卫：在每次路由跳转前检查\nrouter.beforeEach((to, from, next) => {\n    const { isAuthenticated } = useAuth()\n\n    // 如果路由需要认证 且 用户未登录\n    if (to.meta.requiresAuth && !isAuthenticated.value) {\n        // 重定向到登录页\n        next({ name: 'Auth' })\n    } else {\n        // 否则，正常放行\n        next()\n    }\n})\n\nexport default router"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,SAASC,OAAO,QAAQ,iBAAiB;;AAEzC;AACA,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,SAAS,MAAM,uBAAuB;AAE7C,MAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEP;AAAS,CAAC,EAChD;EAAEK,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEN;AAAS,CAAC,EACpD;EACII,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL,WAAW;EACtBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AACjC,CAAC,EACD;EACIJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEJ,SAAS;EACpBK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AACjC,CAAC,CACJ;AAED,MAAMC,MAAM,GAAGb,YAAY,CAAC;EACxBc,OAAO,EAAEb,gBAAgB,CAAC,CAAC;EAC3BM;AACJ,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAM;IAAEC;EAAgB,CAAC,GAAGjB,OAAO,CAAC,CAAC;;EAErC;EACA,IAAIc,EAAE,CAACL,IAAI,CAACC,YAAY,IAAI,CAACO,eAAe,CAACC,KAAK,EAAE;IAChD;IACAF,IAAI,CAAC;MAAET,IAAI,EAAE;IAAO,CAAC,CAAC;EAC1B,CAAC,MAAM;IACH;IACAS,IAAI,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}