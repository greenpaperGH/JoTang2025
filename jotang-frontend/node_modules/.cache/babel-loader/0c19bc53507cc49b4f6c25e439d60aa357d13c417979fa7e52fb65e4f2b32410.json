{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  border: \"1\",\n  style: {\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[16] || (_cache[16] = _createElementVNode(\"h2\", null, \"商品管理\", -1 /* CACHED */)), _createElementVNode(\"fieldset\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"legend\", null, \"新增商品\", -1 /* CACHED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.createProduct, [\"prevent\"])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newProduct.title = $event),\n    placeholder: \"标题\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newProduct.title]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newProduct.description = $event),\n    placeholder: \"描述\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newProduct.description]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newProduct.type = $event),\n    placeholder: \"类型\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newProduct.type]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.newProduct.price = $event),\n    type: \"number\",\n    placeholder: \"价格\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newProduct.price, void 0, {\n    number: true\n  }]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.newProduct.status = $event),\n    placeholder: \"状态 (e.g., available)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newProduct.status]]), _cache[10] || (_cache[10] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"创建\", -1 /* CACHED */))], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"fieldset\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"legend\", null, \"查询商品\", -1 /* CACHED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.searchProducts, [\"prevent\"])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.searchParams.type = $event),\n    placeholder: \"类型\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchParams.type]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.searchParams.minPrice = $event),\n    type: \"number\",\n    placeholder: \"最低价\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchParams.minPrice, void 0, {\n    number: true\n  }]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.searchParams.maxPrice = $event),\n    type: \"number\",\n    placeholder: \"最高价\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchParams.maxPrice, void 0, {\n    number: true\n  }]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.searchParams.startTime = $event),\n    type: \"date\",\n    placeholder: \"开始时间\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchParams.startTime]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.searchParams.endTime = $event),\n    type: \"date\",\n    placeholder: \"结束时间\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchParams.endTime]]), _cache[12] || (_cache[12] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"搜索\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: $setup.fetchAllProducts\n  }, \"清空并查询所有\")], 32 /* NEED_HYDRATION */)]), _cache[17] || (_cache[17] = _createElementVNode(\"h3\", null, \"商品列表\", -1 /* CACHED */)), _createElementVNode(\"table\", _hoisted_1, [_cache[15] || (_cache[15] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"标题\"), _createElementVNode(\"th\", null, \"类型\"), _createElementVNode(\"th\", null, \"价格\"), _createElementVNode(\"th\", null, \"状态\"), _createElementVNode(\"th\", null, \"发布时间\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [$setup.products.length === 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_2, [...(_cache[14] || (_cache[14] = [_createElementVNode(\"td\", {\n    colspan: \"7\"\n  }, \"暂无数据\", -1 /* CACHED */)]))])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.products, product => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: product.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(product.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.type), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.status), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.publishTime), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteProduct(product.id)\n    }, \" 删除 \", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $setup.errorMsg ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($setup.errorMsg), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["border","style","_createElementBlock","_createElementVNode","onSubmit","_withModifiers","$setup","createProduct","newProduct","title","$event","placeholder","required","description","type","price","number","status","searchProducts","searchParams","minPrice","maxPrice","startTime","endTime","onClick","fetchAllProducts","_hoisted_1","products","length","_hoisted_2","_cache","colspan","_Fragment","_renderList","product","key","id","_toDisplayString","publishTime","deleteProduct","_hoisted_3","errorMsg","_hoisted_4"],"sources":["G:\\vue-project\\jotang-frontend\\src\\views\\ProductList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>商品管理</h2>\r\n\r\n    <fieldset>\r\n      <legend>新增商品</legend>\r\n      <form @submit.prevent=\"createProduct\">\r\n        <input v-model=\"newProduct.title\" placeholder=\"标题\" required />\r\n        <input v-model=\"newProduct.description\" placeholder=\"描述\" />\r\n        <input v-model=\"newProduct.type\" placeholder=\"类型\" />\r\n        <input v-model.number=\"newProduct.price\" type=\"number\" placeholder=\"价格\" />\r\n        <input v-model=\"newProduct.status\" placeholder=\"状态 (e.g., available)\" />\r\n        <button type=\"submit\">创建</button>\r\n      </form>\r\n    </fieldset>\r\n\r\n    <fieldset>\r\n      <legend>查询商品</legend>\r\n      <form @submit.prevent=\"searchProducts\">\r\n        <input v-model=\"searchParams.type\" placeholder=\"类型\" />\r\n        <input v-model.number=\"searchParams.minPrice\" type=\"number\" placeholder=\"最低价\" />\r\n        <input v-model.number=\"searchParams.maxPrice\" type=\"number\" placeholder=\"最高价\" />\r\n        <input v-model=\"searchParams.startTime\" type=\"date\" placeholder=\"开始时间\" />\r\n        <input v-model=\"searchParams.endTime\" type=\"date\" placeholder=\"结束时间\" />\r\n        <button type=\"submit\">搜索</button>\r\n        <button type=\"button\" @click=\"fetchAllProducts\">清空并查询所有</button>\r\n      </form>\r\n    </fieldset>\r\n\r\n    <h3>商品列表</h3>\r\n    <table border=\"1\" style=\"width: 100%\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>标题</th>\r\n          <th>类型</th>\r\n          <th>价格</th>\r\n          <th>状态</th>\r\n          <th>发布时间</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-if=\"products.length === 0\">\r\n          <td colspan=\"7\">暂无数据</td>\r\n        </tr>\r\n        <tr v-for=\"product in products\" :key=\"product.id\">\r\n          <td>{{ product.id }}</td>\r\n          <td>{{ product.title }}</td>\r\n          <td>{{ product.type }}</td>\r\n          <td>{{ product.price }}</td>\r\n          <td>{{ product.status }}</td>\r\n          <td>{{ product.publishTime }}</td>\r\n          <td>\r\n            <button @click=\"deleteProduct(product.id)\">\r\n              删除\r\n            </button>\r\n            </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-if=\"errorMsg\" style=\"color: red\">{{ errorMsg }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive } from 'vue';\r\nimport apiClient from '../services/api';\r\n\r\nconst products = ref([]); //\r\nconst errorMsg = ref('');\r\n\r\n// 响应式对象\r\nconst newProduct = reactive({\r\n  title: '',\r\n  description: '',\r\n  type: '',\r\n  price: 0.0,\r\n  status: 'available',\r\n  publisherId: 1 // 假设一个 publisherId，实际应从登录用户状态中获取\r\n});\r\n\r\n//\r\nconst searchParams = reactive({\r\n  type: '',\r\n  minPrice: null,\r\n  maxPrice: null,\r\n  startTime: '',\r\n  endTime: ''\r\n});\r\n\r\n// GET /products\r\nconst fetchAllProducts = async () => {\r\n  try {\r\n    errorMsg.value = '';\r\n    const response = await apiClient.get('/products');\r\n    if (response.data.code === 1) { //\r\n      products.value = response.data.data;\r\n    } else {\r\n      errorMsg.value = response.data.msg;\r\n    }\r\n  } catch (err) {\r\n    errorMsg.value = '获取商品列表失败。';\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// GET /products/by-condition\r\nconst searchProducts = async () => {\r\n  try {\r\n    errorMsg.value = '';\r\n    // 清理空参数\r\n    const params = {};\r\n    for (const key in searchParams) {\r\n      if (searchParams[key] !== null && searchParams[key] !== '') {\r\n        params[key] = searchParams[key];\r\n      }\r\n    }\r\n    \r\n    const response = await apiClient.get('/products/by-condition', { params });\r\n    if (response.data.code === 1) { //\r\n      products.value = response.data.data;\r\n    } else {\r\n      errorMsg.value = response.data.msg;\r\n    }\r\n  } catch (err) {\r\n    errorMsg.value = '查询商品失败。';\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// POST /products\r\nconst createProduct = async () => {\r\n  try {\r\n    errorMsg.value = '';\r\n    const response = await apiClient.post('/products', newProduct);\r\n    if (response.data.code === 1) { //\r\n      alert('创建成功！');\r\n      // 重置表单\r\n      Object.assign(newProduct, { title: '', description: '', type: '', price: 0.0, status: 'available' });\r\n      // 刷新列表\r\n      fetchAllProducts();\r\n    } else {\r\n      errorMsg.value = response.data.msg;\r\n    }\r\n  } catch (err) {\r\n    errorMsg.value = '创建商品失败。';\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// DELETE /products/{id}\r\nconst deleteProduct = async (id) => {\r\n  if (!confirm(`确定要删除 ID 为 ${id} 的商品吗？`)) {\r\n    return;\r\n  }\r\n  try {\r\n    errorMsg.value = '';\r\n    const response = await apiClient.delete(`/products/${id}`);\r\n    if (response.data.code === 1) { //\r\n      alert('删除成功！');\r\n      // 刷新列表\r\n      fetchAllProducts();\r\n    } else {\r\n      errorMsg.value = response.data.msg;\r\n    }\r\n  } catch (err) {\r\n    errorMsg.value = '删除商品失败。';\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// 组件加载时获取数据\r\nonMounted(fetchAllProducts);\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}