{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nconst baseURL = 'http://localhost:8080';\nexport default {\n  __name: 'SignupView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const user = reactive({\n      username: '',\n      password: '',\n      phone: '',\n      role: 'user' //\n    });\n    const successMsg = ref('');\n    const errorMsg = ref('');\n    const handleSignup = async () => {\n      try {\n        successMsg.value = '';\n        errorMsg.value = '';\n\n        //\n        // SignupController 使用 @RequestBody，所以发送 JSON\n        const response = await fetch(`${baseURL}/signup`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(user) //\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const result = await response.json(); //\n\n        if (result.code === 1) {\n          successMsg.value = '注册成功！正在跳转到登录页...';\n          setTimeout(() => {\n            router.push('/login');\n          }, 2000);\n        } else {\n          errorMsg.value = result.msg || '注册失败。';\n        }\n      } catch (error) {\n        console.error('注册异常:', error);\n        errorMsg.value = '注册失败，请检查用户名是否已存在。';\n      }\n    };\n    const __returned__ = {\n      router,\n      baseURL,\n      user,\n      successMsg,\n      errorMsg,\n      handleSignup,\n      reactive,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","useRouter","baseURL","router","user","username","password","phone","role","successMsg","errorMsg","handleSignup","value","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","result","json","code","setTimeout","push","msg","error","console"],"sources":["G:/vue-project/jotang-frontend/src/views/SignupView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>注册</h2>\r\n    <form @submit.prevent=\"handleSignup\">\r\n      <div>\r\n        <label>用户名: </label>\r\n        <input v-model=\"user.username\" type=\"text\" required />\r\n      </div>\r\n      <div>\r\n        <label>密码: </label>\r\n        <input v-model=\"user.password\" type=\"password\" required />\r\n      </div>\r\n      <div>\r\n        <label>电话: </label>\r\n        <input v-model=\"user.phone\" type=\"tel\" />\r\n      </div>\r\n      <div>\r\n        <label>角色: </label>\r\n        <input v-model=\"user.role\" type=\"text\" placeholder=\"e.g., user\" />\r\n      </div>\r\n      <button type=\"submit\">注册</button>\r\n      <p v-if=\"successMsg\" style=\"color: green\">{{ successMsg }}</p>\r\n      <p v-if=\"errorMsg\" style=\"color: red\">{{ errorMsg }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\nconst baseURL = 'http://localhost:8080';\r\nconst user = reactive({\r\n  username: '',\r\n  password: '',\r\n  phone: '',\r\n  role: 'user' //\r\n});\r\nconst successMsg = ref('');\r\nconst errorMsg = ref('');\r\n\r\nconst handleSignup = async () => {\r\n  try {\r\n    successMsg.value = '';\r\n    errorMsg.value = '';\r\n\r\n    //\r\n    // SignupController 使用 @RequestBody，所以发送 JSON\r\n    const response = await fetch(`${baseURL}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user) //\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json(); //\r\n\r\n    if (result.code === 1) {\r\n      successMsg.value = '注册成功！正在跳转到登录页...';\r\n      setTimeout(() => {\r\n        router.push('/login');\r\n      }, 2000);\r\n    } else {\r\n      errorMsg.value = result.msg || '注册失败。';\r\n    }\r\n  } catch (error) {\r\n    console.error('注册异常:', error);\r\n    errorMsg.value = '注册失败，请检查用户名是否已存在。';\r\n  }\r\n};\r\n</script>"],"mappings":";AA4BA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,YAAY;AAGtC,MAAMC,OAAO,GAAG,uBAAuB;;;;;;;IADvC,MAAMC,MAAM,GAAGF,SAAS,CAAC,CAAC;IAE1B,MAAMG,IAAI,GAAGL,QAAQ,CAAC;MACpBM,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,MAAM,CAAC;IACf,CAAC,CAAC;IACF,MAAMC,UAAU,GAAGT,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMU,QAAQ,GAAGV,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFF,UAAU,CAACG,KAAK,GAAG,EAAE;QACrBF,QAAQ,CAACE,KAAK,GAAG,EAAE;;QAEnB;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,OAAO,SAAS,EAAE;UAChDa,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC;QAEF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;;QAEtC,IAAID,MAAM,CAACE,IAAI,KAAK,CAAC,EAAE;UACrBhB,UAAU,CAACG,KAAK,GAAG,kBAAkB;UACrCc,UAAU,CAAC,MAAM;YACfvB,MAAM,CAACwB,IAAI,CAAC,QAAQ,CAAC;UACvB,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,MAAM;UACLjB,QAAQ,CAACE,KAAK,GAAGW,MAAM,CAACK,GAAG,IAAI,OAAO;QACxC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BnB,QAAQ,CAACE,KAAK,GAAG,mBAAmB;MACtC;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}