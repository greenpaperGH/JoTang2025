{"ast":null,"code":"import { ref } from 'vue';\nimport { apiFetch } from '@/services/apiService.js';\n\n// 1. 定义 emit 函数\n\nexport default {\n  __name: 'ProductView',\n  emits: ['response'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const emit = __emit;\n\n    // 2. 创建商品表单的响应式数据\n    const createData = ref({\n      title: '',\n      description: '',\n      type: '',\n      price: null,\n      status: '',\n      publisherId: null\n    });\n\n    // 3. 删除商品表单的响应式数据\n    const deleteId = ref(null);\n\n    // 4. 获取商品列表\n    async function handleListProducts() {\n      try {\n        //\n        const result = await apiFetch('/products');\n        emit('response', result); //\n      } catch (error) {\n        emit('response', {\n          code: 0,\n          msg: error.message,\n          data: null\n        }); //\n      }\n    }\n\n    // 5. 创建商品\n    async function handleCreateProduct() {\n      try {\n        //\n        const result = await apiFetch('/products', {\n          method: 'POST',\n          body: JSON.stringify(createData.value)\n        });\n        emit('response', result); //\n        // 清空表单\n        createData.value = {\n          title: '',\n          description: '',\n          type: '',\n          price: null,\n          status: '',\n          publisherId: null\n        };\n      } catch (error) {\n        emit('response', {\n          code: 0,\n          msg: error.message,\n          data: null\n        }); //\n      }\n    }\n\n    // 6. 删除商品\n    async function handleDeleteProduct() {\n      if (!deleteId.value) return;\n      try {\n        //\n        const result = await apiFetch(`/products/${deleteId.value}`, {\n          method: 'DELETE'\n        });\n        emit('response', result); //\n        deleteId.value = null;\n      } catch (error) {\n        emit('response', {\n          code: 0,\n          msg: error.message,\n          data: null\n        }); //\n      }\n    }\n    const __returned__ = {\n      emit,\n      createData,\n      deleteId,\n      handleListProducts,\n      handleCreateProduct,\n      handleDeleteProduct,\n      ref,\n      get apiFetch() {\n        return apiFetch;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","apiFetch","emit","__emit","createData","title","description","type","price","status","publisherId","deleteId","handleListProducts","result","error","code","msg","message","data","handleCreateProduct","method","body","JSON","stringify","value","handleDeleteProduct"],"sources":["G:/vue-project/jotang-frontend/src/views/ProductView.vue"],"sourcesContent":["<template>\r\n    <fieldset>\r\n        <legend>2. 商品 (Products)</legend>\r\n        \r\n        <div class=\"form-group\">\r\n            <h3>获取商品列表 (公开)</h3>\r\n            <button @click=\"handleListProducts\">获取所有商品</button>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <h3>创建新商品 (需要Auth)</h3>\r\n            <form @submit.prevent=\"handleCreateProduct\">\r\n                <input type=\"text\" v-model=\"createData.title\" placeholder=\"标题\" required>\r\n                <input type=\"text\" v-model=\"createData.description\" placeholder=\"描述\">\r\n                <input type=\"text\" v-model=\"createData.type\" placeholder=\"类型\" required>\r\n                <input type=\"number\" v-model.number=\"createData.price\" placeholder=\"价格\" required>\r\n                <input type=\"text\" v-model=\"createData.status\" placeholder=\"状态\" required>\r\n                <input type=\"number\" v-model.number=\"createData.publisherId\" placeholder=\"发布者ID\" required>\r\n                <button type=\"submit\">创建商品</button>\r\n            </form>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <h3>删除商品 (需要Auth)</h3>\r\n            <form @submit.prevent=\"handleDeleteProduct\">\r\n                <input type=\"number\" v-model.number=\"deleteId\" placeholder=\"要删除的商品ID\" required>\r\n                <button type=\"submit\">删除商品</button>\r\n            </form>\r\n        </div>\r\n    </fieldset>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { apiFetch } from '@/services/apiService.js'\r\n\r\n// 1. 定义 emit 函数\r\nconst emit = defineEmits(['response'])\r\n\r\n// 2. 创建商品表单的响应式数据\r\nconst createData = ref({\r\n    title: '',\r\n    description: '',\r\n    type: '',\r\n    price: null,\r\n    status: '',\r\n    publisherId: null\r\n})\r\n\r\n// 3. 删除商品表单的响应式数据\r\nconst deleteId = ref(null)\r\n\r\n// 4. 获取商品列表\r\nasync function handleListProducts() {\r\n    try {\r\n        //\r\n        const result = await apiFetch('/products')\r\n        emit('response', result) //\r\n    } catch (error) {\r\n        emit('response', { code: 0, msg: error.message, data: null }) //\r\n    }\r\n}\r\n\r\n// 5. 创建商品\r\nasync function handleCreateProduct() {\r\n    try {\r\n        //\r\n        const result = await apiFetch('/products', {\r\n            method: 'POST',\r\n            body: JSON.stringify(createData.value)\r\n        })\r\n        emit('response', result) //\r\n        // 清空表单\r\n        createData.value = { title: '', description: '', type: '', price: null, status: '', publisherId: null }\r\n    } catch (error) {\r\n        emit('response', { code: 0, msg: error.message, data: null }) //\r\n    }\r\n}\r\n\r\n// 6. 删除商品\r\nasync function handleDeleteProduct() {\r\n    if (!deleteId.value) return;\r\n    try {\r\n        //\r\n        const result = await apiFetch(`/products/${deleteId.value}`, {\r\n            method: 'DELETE'\r\n        })\r\n        emit('response', result) //\r\n        deleteId.value = null\r\n    } catch (error) {\r\n        emit('response', { code: 0, msg: error.message, data: null }) //\r\n    }\r\n}\r\n</script>"],"mappings":"AAiCA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,QAAQ,QAAQ,0BAA0B;;AAEnD;;;;;;;;;;IACA,MAAMC,IAAI,GAAGC,MAAyB;;IAEtC;IACA,MAAMC,UAAU,GAAGJ,GAAG,CAAC;MACnBK,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,IAAI;MACXC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE;IACjB,CAAC,CAAC;;IAEF;IACA,MAAMC,QAAQ,GAAGX,GAAG,CAAC,IAAI,CAAC;;IAE1B;IACA,eAAeY,kBAAkBA,CAAA,EAAG;MAChC,IAAI;QACA;QACA,MAAMC,MAAM,GAAG,MAAMZ,QAAQ,CAAC,WAAW,CAAC;QAC1CC,IAAI,CAAC,UAAU,EAAEW,MAAM,CAAC,EAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZZ,IAAI,CAAC,UAAU,EAAE;UAAEa,IAAI,EAAE,CAAC;UAAEC,GAAG,EAAEF,KAAK,CAACG,OAAO;UAAEC,IAAI,EAAE;QAAK,CAAC,CAAC,EAAC;MAClE;IACJ;;IAEA;IACA,eAAeC,mBAAmBA,CAAA,EAAG;MACjC,IAAI;QACA;QACA,MAAMN,MAAM,GAAG,MAAMZ,QAAQ,CAAC,WAAW,EAAE;UACvCmB,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,UAAU,CAACoB,KAAK;QACzC,CAAC,CAAC;QACFtB,IAAI,CAAC,UAAU,EAAEW,MAAM,CAAC,EAAC;QACzB;QACAT,UAAU,CAACoB,KAAK,GAAG;UAAEnB,KAAK,EAAE,EAAE;UAAEC,WAAW,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE,IAAI;UAAEC,MAAM,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAK,CAAC;MAC3G,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZZ,IAAI,CAAC,UAAU,EAAE;UAAEa,IAAI,EAAE,CAAC;UAAEC,GAAG,EAAEF,KAAK,CAACG,OAAO;UAAEC,IAAI,EAAE;QAAK,CAAC,CAAC,EAAC;MAClE;IACJ;;IAEA;IACA,eAAeO,mBAAmBA,CAAA,EAAG;MACjC,IAAI,CAACd,QAAQ,CAACa,KAAK,EAAE;MACrB,IAAI;QACA;QACA,MAAMX,MAAM,GAAG,MAAMZ,QAAQ,CAAC,aAAaU,QAAQ,CAACa,KAAK,EAAE,EAAE;UACzDJ,MAAM,EAAE;QACZ,CAAC,CAAC;QACFlB,IAAI,CAAC,UAAU,EAAEW,MAAM,CAAC,EAAC;QACzBF,QAAQ,CAACa,KAAK,GAAG,IAAI;MACzB,CAAC,CAAC,OAAOV,KAAK,EAAE;QACZZ,IAAI,CAAC,UAAU,EAAE;UAAEa,IAAI,EAAE,CAAC;UAAEC,GAAG,EAAEF,KAAK,CAACG,OAAO;UAAEC,IAAI,EAAE;QAAK,CAAC,CAAC,EAAC;MAClE;IACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}