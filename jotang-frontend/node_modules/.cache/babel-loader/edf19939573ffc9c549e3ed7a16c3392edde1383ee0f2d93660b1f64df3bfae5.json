{"ast":null,"code":"import { ref, onMounted, reactive } from 'vue';\nimport apiClient from '../services/api';\nexport default {\n  __name: 'ProductList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const products = ref([]); //\n    const errorMsg = ref('');\n\n    // 响应式对象\n    const newProduct = reactive({\n      title: '',\n      description: '',\n      type: '',\n      price: 0.0,\n      status: 'available',\n      publisherId: 1 // 假设一个 publisherId，实际应从登录用户状态中获取\n    });\n\n    //\n    const searchParams = reactive({\n      type: '',\n      minPrice: null,\n      maxPrice: null,\n      startTime: '',\n      endTime: ''\n    });\n\n    // GET /products\n    const fetchAllProducts = async () => {\n      try {\n        errorMsg.value = '';\n        const response = await apiClient.get('/products');\n        if (response.data.code === 1) {\n          //\n          products.value = response.data.data;\n        } else {\n          errorMsg.value = response.data.msg;\n        }\n      } catch (err) {\n        errorMsg.value = '获取商品列表失败。';\n        console.error(err);\n      }\n    };\n\n    // GET /products/by-condition\n    const searchProducts = async () => {\n      try {\n        errorMsg.value = '';\n        // 清理空参数\n        const params = {};\n        for (const key in searchParams) {\n          if (searchParams[key] !== null && searchParams[key] !== '') {\n            params[key] = searchParams[key];\n          }\n        }\n        const response = await apiClient.get('/products/by-condition', {\n          params\n        });\n        if (response.data.code === 1) {\n          //\n          products.value = response.data.data;\n        } else {\n          errorMsg.value = response.data.msg;\n        }\n      } catch (err) {\n        errorMsg.value = '查询商品失败。';\n        console.error(err);\n      }\n    };\n\n    // POST /products\n    const createProduct = async () => {\n      try {\n        errorMsg.value = '';\n        const response = await apiClient.post('/products', newProduct);\n        if (response.data.code === 1) {\n          //\n          alert('创建成功！');\n          // 重置表单\n          Object.assign(newProduct, {\n            title: '',\n            description: '',\n            type: '',\n            price: 0.0,\n            status: 'available'\n          });\n          // 刷新列表\n          fetchAllProducts();\n        } else {\n          errorMsg.value = response.data.msg;\n        }\n      } catch (err) {\n        errorMsg.value = '创建商品失败。';\n        console.error(err);\n      }\n    };\n\n    // DELETE /products/{id}\n    const deleteProduct = async id => {\n      if (!confirm(`确定要删除 ID 为 ${id} 的商品吗？`)) {\n        return;\n      }\n      try {\n        errorMsg.value = '';\n        const response = await apiClient.delete(`/products/${id}`);\n        if (response.data.code === 1) {\n          //\n          alert('删除成功！');\n          // 刷新列表\n          fetchAllProducts();\n        } else {\n          errorMsg.value = response.data.msg;\n        }\n      } catch (err) {\n        errorMsg.value = '删除商品失败。';\n        console.error(err);\n      }\n    };\n\n    // 组件加载时获取数据\n    onMounted(fetchAllProducts);\n    const __returned__ = {\n      products,\n      errorMsg,\n      newProduct,\n      searchParams,\n      fetchAllProducts,\n      searchProducts,\n      createProduct,\n      deleteProduct,\n      ref,\n      onMounted,\n      reactive,\n      get apiClient() {\n        return apiClient;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","apiClient","products","errorMsg","newProduct","title","description","type","price","status","publisherId","searchParams","minPrice","maxPrice","startTime","endTime","fetchAllProducts","value","response","get","data","code","msg","err","console","error","searchProducts","params","key","createProduct","post","alert","Object","assign","deleteProduct","id","confirm","delete"],"sources":["G:/vue-project/jotang-frontend/src/views/ProductList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>商品管理</h2>\r\n\r\n    <fieldset>\r\n      <legend>新增商品</legend>\r\n      <form @submit.prevent=\"createProduct\">\r\n        <input v-model=\"newProduct.title\" placeholder=\"标题\" required />\r\n        <input v-model=\"newProduct.description\" placeholder=\"描述\" />\r\n        <input v-model=\"newProduct.type\" placeholder=\"类型\" />\r\n        <input v-model.number=\"newProduct.price\" type=\"number\" placeholder=\"价格\" />\r\n        <input v-model=\"newProduct.status\" placeholder=\"状态 (e.g., available)\" />\r\n        <button type=\"submit\">创建</button>\r\n      </form>\r\n    </fieldset>\r\n\r\n    <fieldset>\r\n      <legend>查询商品</legend>\r\n      <form @submit.prevent=\"searchProducts\">\r\n        <input v-model=\"searchParams.type\" placeholder=\"类型\" />\r\n        <input v-model.number=\"searchParams.minPrice\" type=\"number\" placeholder=\"最低价\" />\r\n        <input v-model.number=\"searchParams.maxPrice\" type=\"number\" placeholder=\"最高价\" />\r\n        <input v-model=\"searchParams.startTime\" type=\"date\" placeholder=\"开始时间\" />\r\n        <input v-model=\"searchParams.endTime\" type=\"date\" placeholder=\"结束时间\" />\r\n        <button type=\"submit\">搜索</button>\r\n        <button type=\"button\" @click=\"fetchAllProducts\">清空并查询所有</button>\r\n      </form>\r\n    </fieldset>\r\n\r\n    <h3>商品列表</h3>\r\n    <table border=\"1\" style=\"width: 100%\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>标题</th>\r\n          <th>类型</th>\r\n          <th>价格</th>\r\n          <th>状态</th>\r\n          <th>发布时间</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-if=\"products.length === 0\">\r\n          <td colspan=\"7\">暂无数据</td>\r\n        </tr>\r\n        <tr v-for=\"product in products\" :key=\"product.id\">\r\n          <td>{{ product.id }}</td>\r\n          <td>{{ product.title }}</td>\r\n          <td>{{ product.type }}</td>\r\n          <td>{{ product.price }}</td>\r\n          <td>{{ product.status }}</td>\r\n          <td>{{ product.publishTime }}</td>\r\n          <td>\r\n            <button @click=\"deleteProduct(product.id)\">\r\n              删除\r\n            </button>\r\n            </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-if=\"errorMsg\" style=\"color: red\">{{ errorMsg }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive } from 'vue';\r\nimport apiClient from '../services/api';\r\n\r\nconst products = ref([]); //\r\nconst errorMsg = ref('');\r\n\r\n// 响应式对象\r\nconst newProduct = reactive({\r\n  title: '',\r\n  description: '',\r\n  type: '',\r\n  price: 0.0,\r\n  status: 'available',\r\n  publisherId: 1 // 假设一个 publisherId，实际应从登录用户状态中获取\r\n});\r\n\r\n//\r\nconst searchParams = reactive({\r\n  type: '',\r\n  minPrice: null,\r\n  maxPrice: null,\r\n  startTime: '',\r\n  endTime: ''\r\n});\r\n\r\n// GET /products\r\nconst fetchAllProducts = async () => {\r\n  try {\r\n    errorMsg.value = '';\r\n    const response = await apiClient.get('/products');\r\n    if (response.data.code === 1) { //\r\n      products.value = response.data.data;\r\n    } else {\r\n      errorMsg.value = response.data.msg;\r\n    }\r\n  } catch (err) {\r\n    errorMsg.value = '获取商品列表失败。';\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// GET /products/by-condition\r\nconst searchProducts = async () => {\r\n  try {\r\n    errorMsg.value = '';\r\n    // 清理空参数\r\n    const params = {};\r\n    for (const key in searchParams) {\r\n      if (searchParams[key] !== null && searchParams[key] !== '') {\r\n        params[key] = searchParams[key];\r\n      }\r\n    }\r\n    \r\n    const response = await apiClient.get('/products/by-condition', { params });\r\n    if (response.data.code === 1) { //\r\n      products.value = response.data.data;\r\n    } else {\r\n      errorMsg.value = response.data.msg;\r\n    }\r\n  } catch (err) {\r\n    errorMsg.value = '查询商品失败。';\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// POST /products\r\nconst createProduct = async () => {\r\n  try {\r\n    errorMsg.value = '';\r\n    const response = await apiClient.post('/products', newProduct);\r\n    if (response.data.code === 1) { //\r\n      alert('创建成功！');\r\n      // 重置表单\r\n      Object.assign(newProduct, { title: '', description: '', type: '', price: 0.0, status: 'available' });\r\n      // 刷新列表\r\n      fetchAllProducts();\r\n    } else {\r\n      errorMsg.value = response.data.msg;\r\n    }\r\n  } catch (err) {\r\n    errorMsg.value = '创建商品失败。';\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// DELETE /products/{id}\r\nconst deleteProduct = async (id) => {\r\n  if (!confirm(`确定要删除 ID 为 ${id} 的商品吗？`)) {\r\n    return;\r\n  }\r\n  try {\r\n    errorMsg.value = '';\r\n    const response = await apiClient.delete(`/products/${id}`);\r\n    if (response.data.code === 1) { //\r\n      alert('删除成功！');\r\n      // 刷新列表\r\n      fetchAllProducts();\r\n    } else {\r\n      errorMsg.value = response.data.msg;\r\n    }\r\n  } catch (err) {\r\n    errorMsg.value = '删除商品失败。';\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// 组件加载时获取数据\r\nonMounted(fetchAllProducts);\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}