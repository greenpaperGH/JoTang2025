{"ast":null,"code":"// src/router/index.js\nimport { createRouter, createWebHistory } from 'vue-router';\nimport { useAuth } from '@/utils/auth';\n\n// 导入视图组件\nimport Home from '@/views/Home.vue';\nimport Login from '@/views/Login.vue';\nimport Signup from '@/views/Signup.vue';\nimport ProductList from '@/views/ProductList.vue';\nimport ProductForm from '@/views/ProductForm.vue';\nimport OrderForm from '@/views/OrderForm.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/signup',\n  name: 'Signup',\n  component: Signup\n}, {\n  path: '/products',\n  name: 'ProductList',\n  component: ProductList,\n  meta: {\n    requiresAuth: true\n  } // 此路由需要登录\n}, {\n  path: '/products/new',\n  name: 'ProductNew',\n  component: ProductForm,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/products/edit/:id',\n  // 动态路由匹配 ID\n  name: 'ProductEdit',\n  component: ProductForm,\n  props: true,\n  // 将路由参数 :id 作为 props 传递给组件\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/orders/new',\n  name: 'OrderNew',\n  component: OrderForm,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 全局导航守卫\nrouter.beforeEach((to, from, next) => {\n  const {\n    isLoggedIn\n  } = useAuth();\n\n  // 检查目标路由是否需要认证\n  if (to.meta.requiresAuth && !isLoggedIn.value) {\n    // 如果未登录，重定向到登录页\n    next({\n      name: 'Login'\n    });\n  } else {\n    // 否则，正常放行\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","useAuth","Home","Login","Signup","ProductList","ProductForm","OrderForm","routes","path","name","component","meta","requiresAuth","props","router","history","beforeEach","to","from","next","isLoggedIn","value"],"sources":["G:/vue-project/jotang-frontend/src/router/index.js"],"sourcesContent":["// src/router/index.js\nimport { createRouter, createWebHistory } from 'vue-router';\nimport { useAuth } from '@/utils/auth';\n\n// 导入视图组件\nimport Home from '@/views/Home.vue';\nimport Login from '@/views/Login.vue';\nimport Signup from '@/views/Signup.vue';\nimport ProductList from '@/views/ProductList.vue';\nimport ProductForm from '@/views/ProductForm.vue';\nimport OrderForm from '@/views/OrderForm.vue';\n\nconst routes = [\n    { path: '/', name: 'Home', component: Home },\n    { path: '/login', name: 'Login', component: Login },\n    { path: '/signup', name: 'Signup', component: Signup },\n    {\n        path: '/products',\n        name: 'ProductList',\n        component: ProductList,\n        meta: { requiresAuth: true } // 此路由需要登录\n    },\n    {\n        path: '/products/new',\n        name: 'ProductNew',\n        component: ProductForm,\n        meta: { requiresAuth: true }\n    },\n    {\n        path: '/products/edit/:id', // 动态路由匹配 ID\n        name: 'ProductEdit',\n        component: ProductForm,\n        props: true, // 将路由参数 :id 作为 props 传递给组件\n        meta: { requiresAuth: true }\n    },\n    {\n        path: '/orders/new',\n        name: 'OrderNew',\n        component: OrderForm,\n        meta: { requiresAuth: true }\n    }\n];\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes,\n});\n\n// 全局导航守卫\nrouter.beforeEach((to, from, next) => {\n    const { isLoggedIn } = useAuth();\n    \n    // 检查目标路由是否需要认证\n    if (to.meta.requiresAuth && !isLoggedIn.value) {\n        // 如果未登录，重定向到登录页\n        next({ name: 'Login' });\n    } else {\n        // 否则，正常放行\n        next();\n    }\n});\n\nexport default router;"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,SAASC,OAAO,QAAQ,cAAc;;AAEtC;AACA,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,SAAS,MAAM,uBAAuB;AAE7C,MAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAET;AAAK,CAAC,EAC5C;EAAEO,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAER;AAAM,CAAC,EACnD;EAAEM,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEP;AAAO,CAAC,EACtD;EACIK,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEN,WAAW;EACtBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AACjC,CAAC,EACD;EACIJ,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEL,WAAW;EACtBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC/B,CAAC,EACD;EACIJ,IAAI,EAAE,oBAAoB;EAAE;EAC5BC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEL,WAAW;EACtBQ,KAAK,EAAE,IAAI;EAAE;EACbF,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC/B,CAAC,EACD;EACIJ,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEJ,SAAS;EACpBK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC/B,CAAC,CACJ;AAED,MAAME,MAAM,GAAGhB,YAAY,CAAC;EACxBiB,OAAO,EAAEhB,gBAAgB,CAAC,CAAC;EAC3BQ;AACJ,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAM;IAAEC;EAAW,CAAC,GAAGpB,OAAO,CAAC,CAAC;;EAEhC;EACA,IAAIiB,EAAE,CAACN,IAAI,CAACC,YAAY,IAAI,CAACQ,UAAU,CAACC,KAAK,EAAE;IAC3C;IACAF,IAAI,CAAC;MAAEV,IAAI,EAAE;IAAQ,CAAC,CAAC;EAC3B,CAAC,MAAM;IACH;IACAU,IAAI,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}